@using System.Activities.Expressions
@using Localization
@using WebApplication.Helpers
@model DataAccess.Site
@{
    ViewBag.Title = Resources.LabelReport;
    ViewBag.Link = Html.ActionLink("Back to " + Resources.LabelSitesList, "Index", "Sites");
}
@Html.Partial("_PageTitlePartial")
@Html.Partial("_SiteDetailsPartial", @Model)

<h3>Visitors</h3>
<div id="visitorsChart" style="width: 650px; height: 350px;">
</div> 

<h3>Income</h3>
<div id="incomeChart" style="width: 650px; height: 350px;">
</div>  

<h3>Income Per Visitor</h3>
<div id="incomePerVisitorChart" style="width: 650px; height: 350px;">
</div>  

@section scripts
{
    <script type="text/javascript" src="https://www.google.com/jsapi"></script>  
    <script type="text/javascript">
        google.load("visualization", "1", { packages: ["corechart"] });
    </script>  
    <script type="text/javascript">
        $(function() {
            $.ajax({
                type: 'POST',
                dataType: 'json',
                contentType: 'application/json',
                url: '@Url.Action("ReportData", new {id = Model.Id})',
                data: '{}',
                success: function(siteData) {
                    var months = siteData.Months;
                    makeVisitorsChart(months);
                    makeIncomeChart(months);
                    makeIncomePerVisitorChart(months);
                },
                error: function() {
                    alert("Error loading data! Please try again.");
                }
            });
        });

        function makeVisitorsChart(months) {
            var visitorsChartData = new google.visualization.DataTable();
            visitorsChartData.addColumn('date', 'Month');
            visitorsChartData.addColumn('number', 'General');
            visitorsChartData.addColumn('number', 'Members');
            visitorsChartData.addColumn('number', 'Schools');
            visitorsChartData.addColumn('number', 'Events');
            visitorsChartData.addColumn('number', 'Total Visitors');
            for (var i = 0; i < months.length; i++) {
                var totalVisitors = months[i].VisitorsGeneral +
                    months[i].VisitorsMember +
                    months[i].VisitorsSchool;
                visitorsChartData.addRow([new Date(months[i].MonthTime),
                    months[i].VisitorsGeneral,
                    months[i].VisitorsMember,
                    months[i].VisitorsSchool,
                    months[i].NumberVisitorsAdditional,
                    totalVisitors
                ]);
            }
            // Instantiate and draw our chart, passing in some options
            var incomeChart = new google.visualization.LineChart(document.getElementById('visitorsChart'));
            incomeChart.draw(visitorsChartData,
            {
                width: 700,
                height: 300,
                chartArea: { width: '50%' },
                hAxis: { format: 'MMM-yyyy' },
                vAxis: { title: "Income" }
            });
        }

        function makeIncomeChart(months) {
            // Prepare the data table
            var incomeChartData = new google.visualization.DataTable();
            incomeChartData.addColumn('date', 'Month');
            incomeChartData.addColumn('number', 'Admissions');
            incomeChartData.addColumn('number', 'Retail');
            incomeChartData.addColumn('number', 'Refreshments');
            incomeChartData.addColumn('number', 'Donations');
            incomeChartData.addColumn('number', 'Events');
            incomeChartData.addColumn('number', 'Total Income');
            for (var i = 0; i < months.length; i++) {
                var totalIncome = months[i].IncomeAdmissions +
                    months[i].IncomeRetail +
                    months[i].IncomeRefreshment +
                    months[i].IncomeDonation;
                incomeChartData.addRow([
                    new Date(months[i].MonthTime),
                    months[i].IncomeAdmissions,
                    months[i].IncomeRetail,
                    months[i].IncomeRefreshment,
                    months[i].IncomeDonation,
                    months[i].IncomeAdditionalEvents,
                    totalIncome
                ]);
            }
            // Instantiate and draw our chart, passing in some options
            var incomeChart = new google.visualization.LineChart(document.getElementById('incomeChart'));
            incomeChart.draw(incomeChartData,
            {
                width: 700,
                height: 300,
                chartArea: { width: '50%' },
                hAxis: { format: 'MMM-yyyy' },
                vAxis: { title: "Income" }
            });
        }

        function makeIncomePerVisitorChart(months) {
            // Prepare the data table
            var incomePerVisitorChartData = new google.visualization.DataTable();
            incomePerVisitorChartData.addColumn('date', 'Month');
            incomePerVisitorChartData.addColumn('number', 'Admissions');
            incomePerVisitorChartData.addColumn('number', 'Retail');
            incomePerVisitorChartData.addColumn('number', 'Refreshments');
            incomePerVisitorChartData.addColumn('number', 'Donations');
            incomePerVisitorChartData.addColumn('number', 'Events');
            incomePerVisitorChartData.addColumn('number', 'Total Income');
            for (var i = 0; i < months.length; i++) {
                var totalVisitors = months[i].VisitorsGeneral +
                    months[i].VisitorsMember +
                    months[i].VisitorsSchool;
                var totalIncome = months[i].IncomeAdmissions +
                    months[i].IncomeRetail +
                    months[i].IncomeRefreshment +
                    months[i].IncomeDonation +
                    months[i].IncomeAdditionalEvents;
                incomePerVisitorChartData.addRow([
                    new Date(months[i].MonthTime),
                    months[i].IncomeAdmissions / totalVisitors,
                    months[i].IncomeRetail / totalVisitors,
                    months[i].IncomeRefreshment / totalVisitors,
                    months[i].IncomeDonation / totalVisitors,
                    months[i].IncomeAdditionalEvents / totalVisitors,
                    totalIncome / totalVisitors
                ]);
            }
            // Instantiate and draw our chart, passing in some options
            var incomePerVisitorChart = new google.visualization.LineChart(document.getElementById('incomePerVisitorChart'));
            incomePerVisitorChart.draw(incomePerVisitorChartData,
            {
                width: 700,
                height: 300,
                chartArea: { width: '50%' },
                hAxis: { format: 'MMM-yyyy' },
                vAxis: { title: "Income Per Visitor" }
            });
        }

    </script> 
}
